[package]
name = "keyring_node"
description = "Personal key management server"
version = "0.1.0-beta.4"
license = "AGPL-3.0-only"
authors = ["Dr. Maxim Orlovsky <orlovsky@pandoracore.com>"]
keywords = ["bitcoin", "secp256k1", "ecdsa", "schnorr"]
edition = "2018"
readme = "README.md"
exclude = [".github", "/doc", "/test", "/data", "Dockerfile"]

[lib]
name = "keyring"

[[bin]]
name = "keyringd"
required-features = ["server"]

[[bin]]
name = "keyring-cli"
required-features = ["cli"]

[dependencies]
# Rust language
amplify = "3"
amplify_derive = "2.4.2"
lnpbp = { version = "0.3", features = ["elgamal"] }
bitcoin = { version = "0.26", features = ["rand"] }
slip132 = "0.3.0-rc.1"
internet2 = { version = "0.3.4", default-features = false, features = ["derive", "descriptor-wallet", "bitcoin-ext"] }
microservices = "0.3.2"
# Rust language
lazy_static = "~1.4.0"
chrono = "~0.4.19"
# Serialization & parsing
serde_crate = { package = "serde", version = "~1.0.106", features = ["derive"], optional = true }
serde_with = { version = "~1.5.1", optional = true, features = ["hex"] }
serde_json = { version = "~1.0.55", optional = true }
serde_yaml = { version = "~0.8.13", optional = true }
toml = { version = "~0.5.6", optional = true }
bech32 = { version = "~0.7.2", optional = true }
base64 = { version = "~0.12.1", optional = true }
# Congig & logging
settings = { version = "~0.10.1", package = "config", optional = true }
configure_me = { version = "~0.4.0", optional = true }
dotenv = { version = "~0.15.0", optional = true }
clap = { version = "=3.0.0-beta.2", optional = true }
log = { version = "~0.4.8", optional = true, features = ["max_level_trace", "release_max_level_debug"] }
env_logger = { version = "~0.7.1", optional = true }
colored = { version = "~2.0.0", optional = true }
shellexpand = { version = "~2.0.0", optional = true }

[build-dependencies]
amplify = "3"
amplify_derive = "2.4.2"
lnpbp = "0.3"
descriptor-wallet = "0.3"
bitcoin = "0.26"
slip132 = "0.3.0-rc.1"
internet2 = { version = "0.3.4", default-features = false, features = ["descriptor-wallet", "bitcoin-ext"] }
microservices = { version = "0.3.2", default-features = false }
serde_crate = { package = "serde", version = "~1.0.106", features = ["derive"] }
lazy_static = "~1.4.0"
clap = "3.0.0-beta.2"
clap_generate = "3.0.0-beta.2"
log = { version = "~0.4.8", features = ["max_level_trace", "release_max_level_debug"] }
shellexpand = "~2.0.0"
configure_me_codegen = "~0.4.0"

# Recommended set of features:
# 1. Standalone node: `server` (=`node`+`shell`)
# 2. Cli to remote node: `cli` (auto includes `shell` and `integration`)
# 3. Mobile app talking to a server: `client`
# 4. Mobile app with embedded node: `embedded` (auto includes `client` + `node`)
# 5. Simple cli utility app: `shell`
[features]
default = ["server", "cli"]
all = ["server", "cli", "serde", "tor", "vendored_openssl"]

# Server is a standalone application that runs daemon
server = ["node", "shell", "microservices/server"]
# Command-line application feature
cli = ["shell", "client", "serde", "microservices/cli"]

# Embedded is an app that contains embedded node and that talks to it through
# integration layer
embedded = ["client", "node", "microservices/embedded"]
# Server node can be run as a part of mobile app and other types of clients;
# thus `server` != `node`.
# This feature results in building with features not required for command-line
node = ["serde", "internet2/keygen", "bitcoin/rand", "internet2/zmq", "microservices/node",
    "internet2/url", "base64",
    # Required for storing config and cache
    "_config", "_rpc"]
# Feature is required for any applications that talks to daemon processes
client = ["internet2/zmq", "microservices/client", "microservices/node", "bitcoin/rand",
    "base64", "internet2/url", "clap", "_rpc"]
# Required for all apps that can be launched from command-line shell as binaries
# (i.e. both servers and cli)
shell = [
    "dotenv", "clap", "settings", "configure_me", "serde",
    "amplify/parse_arg", "microservices/shell", "shellexpand", "colored"
]

# Internally used features for convenience
_config = ["serde_yaml", "toml"]
_rpc = []

serde = ["serde_crate", "serde_with", "serde_yaml", "serde_json", "toml",
    "chrono/serde", "bitcoin/use-serde", "slip132/serde",
    "amplify/serde", "internet2/serde", "microservices/serde",
    "lnpbp/serde", "descriptor-wallet/serde" ]
tor = ["microservices/tor", "internet2/tor"]
vendored_openssl = ["microservices/vendored_openssl", "internet2/vendored_openssl"]

[package.metadata.configure_me]
spec = "config_spec.toml"
